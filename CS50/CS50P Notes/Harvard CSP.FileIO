#lists

name = []
for _ in range(3):
    names.append(input("What's your name?"))
name = input("What's your name?")

#open - open a file or create a file

name = input("What's your name? ")
file = open("names.txt", "a #append")
file.write(f"{name}\n")
file.close()

#with - sometimes forget to close files, using "with" no need to call "close.()"

name = input("What's your name? ")
with open("names.txt", "a") as file:
    file.write(f"{name}\n")

#read
with open("names.txt", "r") as file:
    for line in lines:
        print("hello,", line.rstrip())

#sorted
names = []
with open("names.txt") as file:
    for line in file:
        names.append(line.rstrip())
for name in sorted(names):
    print(f"hello, {name}")

#comma separated values
create csv file
ex. hermione, gryffindor
    harry, gryffindor
    ron, gryffindor
    draco, slytherin

with open("students.csv") as file:
    for line in file:
        name, house = line.rstrip().split(",")
        print(f"{name} is in {house}")

#csv continued
with open("students.csv") as file:
    for line in file:
        name, house = line.rstrip().split(",")
        student = {"name": name, "house": house}
        students.append(student)
for student in students:
    print(f"{student['name']} is in {student['house']}")"

#sort keys
with open("students.csv") as file:
    for line in file:
        name, house = line.rstrip().split(",")
        student = {"name": name, "house": house}
        students.append(student)

def get_name(student):
    return student ["name"]

for student in sorted(students, key=get_name):
    print(f"{student['name']} is in {student['house']}")"

#lamba functions - anonymous functions

def get_name(student):
    return student ["name"]

for student in sorted(students, key=lambda student: student["name"]):
    print(f"{student['name']} is in {student['house']}")"

#csv.reader
import csv
students = []
with open("students.csv") as file:
    reader = csv.reader(file)
    for name, home in reader:
        students.append({"name": name, "home": home})
for student in sorted(students, key=lambda student: student["name"])
    print(f"{student['name']} is from {student['home']}")

#csv.DictReader
Need to name the column headers in the csv file
ex.
name, house
harry,gryffindor house
hermione,gryffindor house
draco,slytherin house

import csv
students = []
with open("students.csv") as file:
    reader = csv.DictReader(file)
    for row in reader:
        students.append({"name": row["name"], "home": row["home"]})
for student in sorted(students, key=lambda student: student["name"])
    print(f"{student['name']} is from {student['home']}")

#csv.writer

import csv
name = input("What's your name? ")
home = input("What's your home? ")
with open("students.csv", "a") as file:
    writer = csv.writer(file)
    writer.writerow([name, home])

#csv.DictWriter

import csv
name = input("What's your name? ")
home = input("What's your home? ")
with open("students.csv", "a") as file:
    writer = csv.DictWriter(file, fieldnames=["name", "home"])
    writer.writerow({"name": name, "home": home})

#Images, PIL library
import sys
from PIL import image

images = []

for each arg in sys.argv[1:]
    image = Image.open(arg)
    images.append(image)

image[0].save(
    "costumes.gif", save_all = True, append_images[images[1]], duration = 200, loop=0
)
